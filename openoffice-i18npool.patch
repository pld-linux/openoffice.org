--- oo/i18npool/source/collator/chaptercollator.cxx.orig	Fri May 23 18:04:06 2003
+++ oo/i18npool/source/collator/chaptercollator.cxx	Fri May 23 18:04:19 2003
@@ -2,9 +2,9 @@
  *
  *  $RCSfile$
  *
- *  $Revision$
+ *  $Revision$
  *
- *  last change: $Author$ $Date$
+ *  last change: $Author$ $Date$
  *
  *  The Contents of this file are made available subject to the terms of
  *  either of the following licenses
@@ -110,7 +110,7 @@
 	if( ans != 0 )
 	    return ans;
 
-	OUString &aAddAllowed = OUString::createFromAscii("?");
+	const OUString &aAddAllowed = OUString::createFromAscii("?");
 	ParseResult res1, res2;
 	// Bug #100323#, since parseAnyToken does not take length as parameter, we have to copy
 	// it to a temp. string.
--- oo/i18npool/source/collator/collatorImpl.cxx.orig	Fri May 23 18:08:23 2003
+++ oo/i18npool/source/collator/collatorImpl.cxx	Fri May 23 18:08:56 2003
@@ -2,9 +2,9 @@
  *
  *  $RCSfile$
  *
- *  $Revision$
+ *  $Revision$
  *
- *  last change: $Author$ $Date$
+ *  last change: $Author$ $Date$
  *
  *  The Contents of this file are made available subject to the terms of
  *  either of the following licenses
@@ -118,7 +118,7 @@
 sal_Int32 SAL_CALL
 CollatorImpl::loadDefaultCollator(const lang::Locale& rLocale, sal_Int32 collatorOptions) throw(RuntimeException)
 {
-    Sequence< Implementation > &imp = localedata->getCollatorImplementations(rLocale);
+    const Sequence< Implementation > &imp = localedata->getCollatorImplementations(rLocale);
     for (sal_Int16 i = 0; i < imp.getLength(); i++)
         if (imp[i].isDefault)
             return loadCollatorAlgorithm(imp[i].unoID, rLocale, collatorOptions);
@@ -156,7 +156,7 @@
 CollatorImpl::listCollatorAlgorithms( const lang::Locale& rLocale ) throw(RuntimeException)
 {
     nLocale = rLocale;
-    Sequence< Implementation > &imp = localedata->getCollatorImplementations(rLocale);
+    const Sequence< Implementation > &imp = localedata->getCollatorImplementations(rLocale);
     Sequence< OUString > list(imp.getLength());
 
     for (sal_Int32 i = 0; i < imp.getLength(); i++) {
--- oo/i18npool/source/collator/collator_icu.cxx.orig	Fri May 23 18:09:27 2003
+++ oo/i18npool/source/collator/collator_icu.cxx	Fri May 23 18:09:40 2003
@@ -2,9 +2,9 @@
  *
  *  $RCSfile$
  *
- *  $Revision$
+ *  $Revision$
  *
- *  last change: $Author$ $Date$
+ *  last change: $Author$ $Date$
  *
  *  The Contents of this file are made available subject to the terms of
  *  either of the following licenses
@@ -93,8 +93,8 @@
 {
 	if (collator) {
 	    if (tranModules & TransliterationModules_IGNORE_KANA) {
-		OUString& s1 = ignore->transliterateString2String(str1, off1, len1);
-		OUString& s2 = ignore->transliterateString2String(str2, off2, len2);
+		const OUString& s1 = ignore->transliterateString2String(str1, off1, len1);
+		const OUString& s2 = ignore->transliterateString2String(str2, off2, len2);
 		return collator->compare(s1.getStr(), s1.getLength(), s2.getStr(), s2.getLength());
 	    }
 	    else
--- oo/i18npool/source/localedate/localedata.cxx.orig	Fri May 23 18:22:59 2003
+++ oo/i18npool/source/localedate/localedata.cxx	Fri May 23 18:23:21 2003
@@ -2,9 +2,9 @@
  *
  *  $RCSfile$
  *
- *  $Revision$
+ *  $Revision$
  *
- *  last change: $Author$ $Date$
+ *  last change: $Author$ $Date$
  *
  *  The Contents of this file are made available subject to the terms of
  *  either of the following licenses
@@ -273,7 +273,7 @@
 		cals = getAllCalendars(loc);
 		len = cals.getLength();
 	    }
-	    OUString& id = name.getToken(0, under, index);
+	    const OUString& id = name.getToken(0, under, index);
 	    for (index = 0; index < cals.getLength(); index++) {
 		if (id.equals(cals[index].Name)) {
 		    ref_cal = cals[index];
--- oo/i18npool/source/transliteration/fullwidthToHalfwidth.cxx.orig	Fri May 23 18:24:50 2003
+++ oo/i18npool/source/transliteration/fullwidthToHalfwidth.cxx	Fri May 23 18:25:03 2003
@@ -2,9 +2,9 @@
  *
  *  $RCSfile$
  *
- *  $Revision$
+ *  $Revision$
  *
- *  last change: $Author$ $Date$
+ *  last change: $Author$ $Date$
  *
  *  The Contents of this file are made available subject to the terms of
  *  either of the following licenses
@@ -90,11 +90,11 @@
   throw(RuntimeException)
 {
     // Decomposition: GA --> KA + voice-mark
-    OUString& newStr = widthfolding::decompose_ja_voiced_sound_marks (inStr, startPos, nCount, offset, useOffset);
+    const OUString& newStr = widthfolding::decompose_ja_voiced_sound_marks (inStr, startPos, nCount, offset, useOffset);
 
     // One to One mapping
     useOffset = sal_False;
-    OUString &tmp = transliteration_OneToOne::transliterate( newStr, 0, newStr.getLength(), offset);
+    const OUString &tmp = transliteration_OneToOne::transliterate( newStr, 0, newStr.getLength(), offset);
     useOffset = sal_True;
     return tmp;
 }
--- oo/i18npool/source/transliteration/halfwidthToFullwidth.cxx.orig	Fri May 23 18:25:53 2003
+++ oo/i18npool/source/transliteration/halfwidthToFullwidth.cxx	Fri May 23 18:26:05 2003
@@ -2,9 +2,9 @@
  *
  *  $RCSfile$
  *
- *  $Revision$
+ *  $Revision$
  *
- *  last change: $Author$ $Date$
+ *  last change: $Author$ $Date$
  *
  *  The Contents of this file are made available subject to the terms of
  *  either of the following licenses
@@ -87,7 +87,7 @@
     sal_Bool _useOffset = useOffset;
     // One to One mapping
     useOffset = sal_False;
-    OUString& newStr = transliteration_OneToOne::transliterate( inStr, startPos, nCount, offset);
+    const OUString& newStr = transliteration_OneToOne::transliterate( inStr, startPos, nCount, offset);
     useOffset = _useOffset;
 
     // Composition: KA + voice-mark --> GA
--- oo/i18npool/source/transliteration/transliterationImpl.cxx.orig	Fri May 23 18:26:54 2003
+++ oo/i18npool/source/transliteration/transliterationImpl.cxx	Fri May 23 18:27:16 2003
@@ -2,9 +2,9 @@
  *
  *  $RCSfile$
  *
- *  $Revision$
+ *  $Revision$
  *
- *  last change: $Author$ $Date$
+ *  last change: $Author$ $Date$
  *
  *  The Contents of this file are made available subject to the terms of
  *  either of the following licenses
@@ -303,7 +303,7 @@
 Sequence<OUString> SAL_CALL
 TransliterationImpl::getAvailableModules( const Locale& rLocale, sal_Int16 sType ) throw(RuntimeException)
 {
-    Sequence<OUString> &translist = localedata->getTransliterations(rLocale);
+    const Sequence<OUString> &translist = localedata->getTransliterations(rLocale);
     Sequence<OUString> &r = *new Sequence< OUString > (translist.getLength());
     Reference<XExtendedTransliteration> body;
     sal_Int32 n = 0;
@@ -532,7 +532,7 @@
     sal_Int32 j_tmp = 0;
     Sequence< OUString > ostr(MaxOutput*length);
     for (sal_Int32 j = 0; j < length; j+=2) {
-        Sequence< OUString >& temp = bodyCascade[_numCascade]->transliterateRange(inStrs[j], inStrs[j+1]);
+        const Sequence< OUString >& temp = bodyCascade[_numCascade]->transliterateRange(inStrs[j], inStrs[j+1]);
 
         for ( sal_Int32 k = 0; k < temp.getLength(); k++) {
             if ( j_tmp >= MaxOutput*length ) throw ERROR;
--- oo/i18npool/source/transliteration/transliteration_commonclass.cxx.orig	Fri May 23 18:28:06 2003
+++ oo/i18npool/source/transliteration/transliteration_commonclass.cxx	Fri May 23 18:28:18 2003
@@ -2,9 +2,9 @@
  *
  *  $RCSfile$
  *
- *  $Revision$
+ *  $Revision$
  *
- *  last change: $Author$ $Date$
+ *  last change: $Author$ $Date$
  *
  *  The Contents of this file are made available subject to the terms of
  *  either of the following licenses
@@ -162,7 +162,7 @@
 {
     static Sequence < sal_Int32 > dummy_offset;
     useOffset = sal_False;
-    OUString &tmpStr = transliterate(inStr, startPos, nCount, dummy_offset);
+    const OUString &tmpStr = transliterate(inStr, startPos, nCount, dummy_offset);
     useOffset = sal_True;
     return tmpStr;
 }
--- oo/i18npool/source/defaultnumberingprovider/defaultnumberingprovider.cxx.orig	Fri May 23 18:29:09 2003
+++ oo/i18npool/source/defaultnumberingprovider/defaultnumberingprovider.cxx	Fri May 23 18:29:20 2003
@@ -2,9 +2,9 @@
  *
  *  $RCSfile$
  *
- *  $Revision$
+ *  $Revision$
  *
- *  last change: $Author$ $Date$
+ *  last change: $Author$ $Date$
  *
  *  The Contents of this file are made available subject to the terms of
  *  either of the following licenses
@@ -215,7 +215,7 @@
 }
 
 static
-should_ignore( OUString s )
+int should_ignore( OUString s )
 {
 	// return true if blank or null
 	return s.compareToAscii(" ")==0 || (s.getLength()>0 && s[0]==0);
@@ -346,7 +346,7 @@
                break;
           case TRANSLITERATION:
 	       try {
- 		    OUString &tmp = OUString::valueOf( number );
+ 		    const OUString &tmp = OUString::valueOf( number );
  		    OUString transliteration;
  		    getPropertyByName(aProperties, "Transliteration", sal_True) >>= transliteration;
  		    translit->loadModuleByImplName(transliteration, aLocale);
